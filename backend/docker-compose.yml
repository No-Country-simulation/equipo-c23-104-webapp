version: '3.8'

services:
  eureka-sv:
    build: ./eureka-sv 
    mem_limit: 512m
    ports:
      - "8761:8761"
    networks:
      - 'microservices-network'

  mysql:
    build: ./my-mysql
    mem_limit: 512m
    ports:
      - "3306:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: db_user
    networks:
      - 'microservices-network'

  microservice-user:
    build: ./microservice-user
    mem_limit: 512m
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-sv:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/db_user?createDatabaseIfNotExist=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9093
    depends_on:
      - eureka-sv
      - mysql
      - kafka
    networks:
      - 'microservices-network'

  microservice-post:
    build: ./microservice-post
    mem_limit: 512m
    ports:
      - "8083:8083"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-sv:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/db_post?createDatabaseIfNotExist=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9093
    depends_on:
      - eureka-sv
      - mysql
      - kafka
    networks:
      - 'microservices-network'

  microservice-comment:
    build: ./microservice-comment
    mem_limit: 512m
    ports:
      - "8084:8084"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-sv:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/db_comment?createDatabaseIfNotExist=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9093
    depends_on:
      - eureka-sv
      - mysql
      - kafka
    networks:
      - 'microservices-network'
      
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9093:9093'
      - '23:29093'  # Para conexiones externas
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093,PLAINTEXT_HOST://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - 'microservices-network'
    
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - 'microservices-network'
networks:
  microservices-network:
